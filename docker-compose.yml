version: '2'

services:
  drone-server:
    image: drone/drone:0.8
    labels:
      - "traefik.port=8000"
      - "traefik.frontend.rule=Host:drone.docker.localhost"
    ports:
      - 8000:8000
      - 9000
    volumes:
      - drone-server-data:/var/lib/drone/
    restart: always

    # ! gitea webhook target URL `MUST` be access-availabled IP (ex. 192.168.1.161)
    environment:
      - GIN_MODE=release
      - DRONE_OPEN=true
      - DRONE_HOST=http://drone-server
      - DRONE_GITEA=true
      - DRONE_GITEA_URL=${GITEA_URL}
      - DRONE_SECRET=${DRONE_SECRET}

  drone-agent:
    image: drone/agent:0.8
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}

  reverse-proxy:
    image: traefik # The official Traefik docker image
    command: --api --docker --docker.domain=docker.localhost --logLevel=DEBUG # Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "80:80"     # The HTTP port
      - "8081:8080" # The Web UI (enabled by --api)
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.docker.localhost"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - /dev/null:/traefik.toml

volumes:
  drone-server-data:
